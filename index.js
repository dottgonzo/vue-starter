"use strict";
var Prompt = require('prompt');
var fs = require("fs");
var gitcontent = fs.readFileSync("./.git/config").toString("utf-8").replace(/\t/g, '').split('\n');
var gitrepo;
for (var i = 0; i < gitcontent.length; i++) {
    if (gitcontent[i].split('@').length > 1) {
        gitrepo = gitcontent[i].split('url = ')[1];
    }
}
console.log(gitrepo);
var schema = {
    properties: {
        name: {
            pattern: /^[a-z\-]+$/,
            message: 'Name must be only lowercase letters, or dashes',
            required: true
        },
        password: {
            hidden: true
        }
    }
};
Prompt.start();
Prompt.get(schema, function (err, result) {
    console.log('Command-line input received:');
    console.log('  name: ' + result.name);
    console.log('  password: ' + result.password);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxJQUFJLE1BQU0sR0FBUSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDcEMsSUFBWSxFQUFFLFdBQU0sSUFBSSxDQUFDLENBQUE7QUFFekIsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7QUFHbEcsSUFBSSxPQUFPLENBQUM7QUFFWixHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUMzQyxFQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzdDLENBQUM7QUFDSCxDQUFDO0FBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUdyQixJQUFJLE1BQU0sR0FBRztJQUNYLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLE9BQU8sRUFBRSxZQUFZO1lBQ3JCLE9BQU8sRUFBRSxnREFBZ0Q7WUFDekQsUUFBUSxFQUFFLElBQUk7U0FDZjtRQUNELFFBQVEsRUFBRTtZQUNSLE1BQU0sRUFBRSxJQUFJO1NBQ2I7S0FDRjtDQUNGLENBQUM7QUFLRixNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7QUFLZixNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxVQUFVLEdBQUcsRUFBRSxNQUFNO0lBSXRDLE9BQU8sQ0FBQyxHQUFHLENBQUMsOEJBQThCLENBQUMsQ0FBQztJQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2hELENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5sZXQgUHJvbXB0OiBhbnkgPSByZXF1aXJlKCdwcm9tcHQnKTtcbmltcG9ydCAqIGFzIGZzIGZyb20gXCJmc1wiO1xuXG5sZXQgZ2l0Y29udGVudCA9IGZzLnJlYWRGaWxlU3luYyhcIi4vLmdpdC9jb25maWdcIikudG9TdHJpbmcoXCJ1dGYtOFwiKS5yZXBsYWNlKC9cXHQvZywnJykuc3BsaXQoJ1xcbicpO1xuXG5cbmxldCBnaXRyZXBvO1xuXG5mb3IgKGxldCBpID0gMDsgaSA8IGdpdGNvbnRlbnQubGVuZ3RoOyBpKyspIHtcbiAgaWYgKGdpdGNvbnRlbnRbaV0uc3BsaXQoJ0AnKS5sZW5ndGggPiAxKSB7XG4gICAgZ2l0cmVwbyA9IGdpdGNvbnRlbnRbaV0uc3BsaXQoJ3VybCA9ICcpWzFdO1xuICB9XG59XG5cbmNvbnNvbGUubG9nKGdpdHJlcG8pO1xuXG5cbmxldCBzY2hlbWEgPSB7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBuYW1lOiB7XG4gICAgICBwYXR0ZXJuOiAvXlthLXpcXC1dKyQvLFxuICAgICAgbWVzc2FnZTogJ05hbWUgbXVzdCBiZSBvbmx5IGxvd2VyY2FzZSBsZXR0ZXJzLCBvciBkYXNoZXMnLFxuICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHBhc3N3b3JkOiB7XG4gICAgICBoaWRkZW46IHRydWVcbiAgICB9XG4gIH1cbn07XG5cbi8vIFxuLy8gU3RhcnQgdGhlIHByb21wdCBcbi8vIFxuUHJvbXB0LnN0YXJ0KCk7XG5cbi8vIFxuLy8gR2V0IHR3byBwcm9wZXJ0aWVzIGZyb20gdGhlIHVzZXI6IHVzZXJuYW1lIGFuZCBlbWFpbCBcbi8vIFxuUHJvbXB0LmdldChzY2hlbWEsIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICAvLyBcbiAgLy8gTG9nIHRoZSByZXN1bHRzLiBcbiAgLy8gXG4gIGNvbnNvbGUubG9nKCdDb21tYW5kLWxpbmUgaW5wdXQgcmVjZWl2ZWQ6Jyk7XG4gIGNvbnNvbGUubG9nKCcgIG5hbWU6ICcgKyByZXN1bHQubmFtZSk7XG4gIGNvbnNvbGUubG9nKCcgIHBhc3N3b3JkOiAnICsgcmVzdWx0LnBhc3N3b3JkKTtcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
